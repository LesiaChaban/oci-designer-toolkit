/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import OcdDocument from '../../../../OcdDocument'
import { ResourceElementConfig, ResourceProperties } from '../../../OcdPropertyTypes'
import * as AutoGenerated from './generated/OciDatascienceNotebookSession'
import { OciDatascienceNotebookSessionConfigs } from './configs/OciDatascienceNotebookSession'
import { CacheContext } from '../../../../../pages/OcdConsole'
import { useContext } from 'react'

export const OciDatascienceNotebookSession = ({ ocdDocument, setOcdDocument, resource }: ResourceProperties): JSX.Element => {
    const configs: ResourceElementConfig[] = OciDatascienceNotebookSessionConfigs.configs()
    const {ocdCache} = useContext(CacheContext)
    const shape = ocdCache.getOciReferenceDataList('datascienceNotebookSessionShapes').find((r: Record<string, any>) => r.id === resource.notebookSessionConfigDetails.shape)
    // For flexible shapes add min / max values based on Cache information for Memory and OCPU
    if (shape !== undefined && shape.isFlexible) {
        const memoryInGbsProps: ResourceElementConfig = {
            id: 'notebook_session_config_details.notebook_session_shape_config_details.memory_in_gbs',
            properties: {
                min: shape.memoryOptions.minInGBs,
                max: shape.memoryOptions.maxInGBs
            },
            configs: []
        }
        const ocpusProps: ResourceElementConfig = {
            id: 'notebook_session_config_details.notebook_session_shape_config_details.ocpus',
            properties: {
                min: shape.ocpuOptions.min,
                max: shape.ocpuOptions.max
            },
            configs: []
        }
        configs.push(memoryInGbsProps)
        configs.push(ocpusProps)
    }
    return (
        <AutoGenerated.OciDatascienceNotebookSession ocdDocument={ocdDocument} setOcdDocument={(ocdDocument:OcdDocument) => setOcdDocument(ocdDocument)} resource={resource} configs={configs} key={`${resource.id}.AutoGenerated.OciDatascienceNotebookSession`} />
    )
}
